// Generated from grammars/R.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class RLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly T__30 = 31;
	public static readonly T__31 = 32;
	public static readonly T__32 = 33;
	public static readonly T__33 = 34;
	public static readonly T__34 = 35;
	public static readonly T__35 = 36;
	public static readonly T__36 = 37;
	public static readonly T__37 = 38;
	public static readonly T__38 = 39;
	public static readonly T__39 = 40;
	public static readonly T__40 = 41;
	public static readonly T__41 = 42;
	public static readonly T__42 = 43;
	public static readonly T__43 = 44;
	public static readonly T__44 = 45;
	public static readonly T__45 = 46;
	public static readonly T__46 = 47;
	public static readonly T__47 = 48;
	public static readonly T__48 = 49;
	public static readonly T__49 = 50;
	public static readonly T__50 = 51;
	public static readonly T__51 = 52;
	public static readonly T__52 = 53;
	public static readonly T__53 = 54;
	public static readonly T__54 = 55;
	public static readonly T__55 = 56;
	public static readonly T__56 = 57;
	public static readonly T__57 = 58;
	public static readonly T__58 = 59;
	public static readonly HEX = 60;
	public static readonly INT = 61;
	public static readonly FLOAT = 62;
	public static readonly COMPLEX = 63;
	public static readonly STRING = 64;
	public static readonly ID = 65;
	public static readonly USER_OP = 66;
	public static readonly COMMENT = 67;
	public static readonly NL = 68;
	public static readonly WS = 69;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'[['", 
                                                            "']'", "'('", 
                                                            "')'", "'[-c('", 
                                                            "':'", "')]'", 
                                                            "'['", "','", 
                                                            "'<-'", "'='", 
                                                            "'c('", "'::'", 
                                                            "':::'", "'$'", 
                                                            "'@'", "'^'", 
                                                            "'-'", "'+'", 
                                                            "'*'", "'/'", 
                                                            "'>'", "'>='", 
                                                            "'<'", "'<='", 
                                                            "'=='", "'!='", 
                                                            "'!'", "'&'", 
                                                            "'&&'", "'|'", 
                                                            "'||'", "'~'", 
                                                            "'function'", 
                                                            "'<<-'", "'->'", 
                                                            "'->>'", "':='", 
                                                            "'return('", 
                                                            "'{'", "'}'", 
                                                            "'if'", "'else'", 
                                                            "'for'", "'in'", 
                                                            "'while'", "'repeat'", 
                                                            "'?'", "'next'", 
                                                            "'break'", "'NULL'", 
                                                            "'NA'", "'Inf'", 
                                                            "'NaN'", "'TRUE'", 
                                                            "'FALSE'", "';'", 
                                                            "'...'", "'.'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             null, null, 
                                                             "HEX", "INT", 
                                                             "FLOAT", "COMPLEX", 
                                                             "STRING", "ID", 
                                                             "USER_OP", 
                                                             "COMMENT", 
                                                             "NL", "WS" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "HEX", "INT", "HEXDIGIT", "FLOAT", "DIGIT", "EXP", "COMPLEX", 
		"STRING", "ESC", "UNICODE_ESCAPE", "OCTAL_ESCAPE", "HEX_ESCAPE", "ID", 
		"LETTER", "USER_OP", "COMMENT", "NL", "WS",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, RLexer._ATN, RLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "R.g4"; }

	public get literalNames(): (string | null)[] { return RLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return RLexer.symbolicNames; }
	public get ruleNames(): string[] { return RLexer.ruleNames; }

	public get serializedATN(): number[] { return RLexer._serializedATN; }

	public get channelNames(): string[] { return RLexer.channelNames; }

	public get modeNames(): string[] { return RLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,69,558,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,
	2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,
	60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,
	7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,
	74,2,75,7,75,2,76,7,76,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,
	1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,11,
	1,11,1,11,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,
	16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,23,
	1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,
	29,1,29,1,29,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,1,33,1,33,1,33,
	1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,
	36,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,40,
	1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,
	44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,
	1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,
	50,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,
	1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,57,1,
	57,1,57,1,57,1,58,1,58,1,59,1,59,1,59,4,59,352,8,59,11,59,12,59,353,1,59,
	3,59,357,8,59,1,60,4,60,360,8,60,11,60,12,60,361,1,60,3,60,365,8,60,1,61,
	1,61,1,62,4,62,370,8,62,11,62,12,62,371,1,62,1,62,5,62,376,8,62,10,62,12,
	62,379,9,62,1,62,3,62,382,8,62,1,62,3,62,385,8,62,1,62,4,62,388,8,62,11,
	62,12,62,389,1,62,3,62,393,8,62,1,62,3,62,396,8,62,1,62,1,62,4,62,400,8,
	62,11,62,12,62,401,1,62,3,62,405,8,62,1,62,3,62,408,8,62,3,62,410,8,62,
	1,63,1,63,1,64,1,64,3,64,416,8,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,
	65,3,65,426,8,65,1,66,1,66,1,66,5,66,431,8,66,10,66,12,66,434,9,66,1,66,
	1,66,1,66,1,66,5,66,440,8,66,10,66,12,66,443,9,66,1,66,1,66,1,66,1,66,5,
	66,449,8,66,10,66,12,66,452,9,66,1,66,3,66,455,8,66,1,67,1,67,1,67,1,67,
	1,67,3,67,462,8,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,
	68,1,68,1,68,1,68,1,68,1,68,3,68,480,8,68,1,69,1,69,1,69,1,69,1,69,1,69,
	1,69,1,69,1,69,3,69,491,8,69,1,70,1,70,1,70,3,70,496,8,70,1,71,1,71,1,71,
	3,71,501,8,71,1,71,1,71,1,71,5,71,506,8,71,10,71,12,71,509,9,71,1,71,1,
	71,1,71,1,71,5,71,515,8,71,10,71,12,71,518,9,71,3,71,520,8,71,1,72,1,72,
	1,73,1,73,5,73,526,8,73,10,73,12,73,529,9,73,1,73,1,73,1,74,1,74,5,74,535,
	8,74,10,74,12,74,538,9,74,1,74,3,74,541,8,74,1,74,1,74,1,74,1,74,1,75,3,
	75,548,8,75,1,75,1,75,1,76,4,76,553,8,76,11,76,12,76,554,1,76,1,76,5,432,
	441,450,527,536,0,77,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,
	23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,
	47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,
	71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,
	95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,
	58,117,59,119,60,121,61,123,0,125,62,127,0,129,0,131,63,133,64,135,0,137,
	0,139,0,141,0,143,65,145,0,147,66,149,67,151,68,153,69,1,0,13,2,0,88,88,
	120,120,2,0,76,76,108,108,3,0,48,57,65,70,97,102,2,0,69,69,101,101,2,0,
	43,43,45,45,2,0,34,34,92,92,2,0,39,39,92,92,9,0,34,34,39,39,92,92,97,98,
	102,102,110,110,114,114,116,116,118,118,1,0,48,51,1,0,48,55,2,0,46,46,95,
	95,2,0,65,90,97,122,3,0,9,9,12,12,32,32,595,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
	1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
	0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
	0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
	0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
	0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,
	0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,
	0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,
	0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,
	0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,
	0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
	0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,125,1,0,0,0,0,
	131,1,0,0,0,0,133,1,0,0,0,0,143,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,
	1,0,0,0,0,153,1,0,0,0,1,155,1,0,0,0,3,158,1,0,0,0,5,160,1,0,0,0,7,162,1,
	0,0,0,9,164,1,0,0,0,11,169,1,0,0,0,13,171,1,0,0,0,15,174,1,0,0,0,17,176,
	1,0,0,0,19,178,1,0,0,0,21,181,1,0,0,0,23,183,1,0,0,0,25,186,1,0,0,0,27,
	189,1,0,0,0,29,193,1,0,0,0,31,195,1,0,0,0,33,197,1,0,0,0,35,199,1,0,0,0,
	37,201,1,0,0,0,39,203,1,0,0,0,41,205,1,0,0,0,43,207,1,0,0,0,45,209,1,0,
	0,0,47,212,1,0,0,0,49,214,1,0,0,0,51,217,1,0,0,0,53,220,1,0,0,0,55,223,
	1,0,0,0,57,225,1,0,0,0,59,227,1,0,0,0,61,230,1,0,0,0,63,232,1,0,0,0,65,
	235,1,0,0,0,67,237,1,0,0,0,69,246,1,0,0,0,71,250,1,0,0,0,73,253,1,0,0,0,
	75,257,1,0,0,0,77,260,1,0,0,0,79,268,1,0,0,0,81,270,1,0,0,0,83,272,1,0,
	0,0,85,275,1,0,0,0,87,280,1,0,0,0,89,284,1,0,0,0,91,287,1,0,0,0,93,293,
	1,0,0,0,95,300,1,0,0,0,97,302,1,0,0,0,99,307,1,0,0,0,101,313,1,0,0,0,103,
	318,1,0,0,0,105,321,1,0,0,0,107,325,1,0,0,0,109,329,1,0,0,0,111,334,1,0,
	0,0,113,340,1,0,0,0,115,342,1,0,0,0,117,346,1,0,0,0,119,348,1,0,0,0,121,
	359,1,0,0,0,123,366,1,0,0,0,125,409,1,0,0,0,127,411,1,0,0,0,129,413,1,0,
	0,0,131,425,1,0,0,0,133,454,1,0,0,0,135,461,1,0,0,0,137,479,1,0,0,0,139,
	490,1,0,0,0,141,492,1,0,0,0,143,519,1,0,0,0,145,521,1,0,0,0,147,523,1,0,
	0,0,149,532,1,0,0,0,151,547,1,0,0,0,153,552,1,0,0,0,155,156,5,91,0,0,156,
	157,5,91,0,0,157,2,1,0,0,0,158,159,5,93,0,0,159,4,1,0,0,0,160,161,5,40,
	0,0,161,6,1,0,0,0,162,163,5,41,0,0,163,8,1,0,0,0,164,165,5,91,0,0,165,166,
	5,45,0,0,166,167,5,99,0,0,167,168,5,40,0,0,168,10,1,0,0,0,169,170,5,58,
	0,0,170,12,1,0,0,0,171,172,5,41,0,0,172,173,5,93,0,0,173,14,1,0,0,0,174,
	175,5,91,0,0,175,16,1,0,0,0,176,177,5,44,0,0,177,18,1,0,0,0,178,179,5,60,
	0,0,179,180,5,45,0,0,180,20,1,0,0,0,181,182,5,61,0,0,182,22,1,0,0,0,183,
	184,5,99,0,0,184,185,5,40,0,0,185,24,1,0,0,0,186,187,5,58,0,0,187,188,5,
	58,0,0,188,26,1,0,0,0,189,190,5,58,0,0,190,191,5,58,0,0,191,192,5,58,0,
	0,192,28,1,0,0,0,193,194,5,36,0,0,194,30,1,0,0,0,195,196,5,64,0,0,196,32,
	1,0,0,0,197,198,5,94,0,0,198,34,1,0,0,0,199,200,5,45,0,0,200,36,1,0,0,0,
	201,202,5,43,0,0,202,38,1,0,0,0,203,204,5,42,0,0,204,40,1,0,0,0,205,206,
	5,47,0,0,206,42,1,0,0,0,207,208,5,62,0,0,208,44,1,0,0,0,209,210,5,62,0,
	0,210,211,5,61,0,0,211,46,1,0,0,0,212,213,5,60,0,0,213,48,1,0,0,0,214,215,
	5,60,0,0,215,216,5,61,0,0,216,50,1,0,0,0,217,218,5,61,0,0,218,219,5,61,
	0,0,219,52,1,0,0,0,220,221,5,33,0,0,221,222,5,61,0,0,222,54,1,0,0,0,223,
	224,5,33,0,0,224,56,1,0,0,0,225,226,5,38,0,0,226,58,1,0,0,0,227,228,5,38,
	0,0,228,229,5,38,0,0,229,60,1,0,0,0,230,231,5,124,0,0,231,62,1,0,0,0,232,
	233,5,124,0,0,233,234,5,124,0,0,234,64,1,0,0,0,235,236,5,126,0,0,236,66,
	1,0,0,0,237,238,5,102,0,0,238,239,5,117,0,0,239,240,5,110,0,0,240,241,5,
	99,0,0,241,242,5,116,0,0,242,243,5,105,0,0,243,244,5,111,0,0,244,245,5,
	110,0,0,245,68,1,0,0,0,246,247,5,60,0,0,247,248,5,60,0,0,248,249,5,45,0,
	0,249,70,1,0,0,0,250,251,5,45,0,0,251,252,5,62,0,0,252,72,1,0,0,0,253,254,
	5,45,0,0,254,255,5,62,0,0,255,256,5,62,0,0,256,74,1,0,0,0,257,258,5,58,
	0,0,258,259,5,61,0,0,259,76,1,0,0,0,260,261,5,114,0,0,261,262,5,101,0,0,
	262,263,5,116,0,0,263,264,5,117,0,0,264,265,5,114,0,0,265,266,5,110,0,0,
	266,267,5,40,0,0,267,78,1,0,0,0,268,269,5,123,0,0,269,80,1,0,0,0,270,271,
	5,125,0,0,271,82,1,0,0,0,272,273,5,105,0,0,273,274,5,102,0,0,274,84,1,0,
	0,0,275,276,5,101,0,0,276,277,5,108,0,0,277,278,5,115,0,0,278,279,5,101,
	0,0,279,86,1,0,0,0,280,281,5,102,0,0,281,282,5,111,0,0,282,283,5,114,0,
	0,283,88,1,0,0,0,284,285,5,105,0,0,285,286,5,110,0,0,286,90,1,0,0,0,287,
	288,5,119,0,0,288,289,5,104,0,0,289,290,5,105,0,0,290,291,5,108,0,0,291,
	292,5,101,0,0,292,92,1,0,0,0,293,294,5,114,0,0,294,295,5,101,0,0,295,296,
	5,112,0,0,296,297,5,101,0,0,297,298,5,97,0,0,298,299,5,116,0,0,299,94,1,
	0,0,0,300,301,5,63,0,0,301,96,1,0,0,0,302,303,5,110,0,0,303,304,5,101,0,
	0,304,305,5,120,0,0,305,306,5,116,0,0,306,98,1,0,0,0,307,308,5,98,0,0,308,
	309,5,114,0,0,309,310,5,101,0,0,310,311,5,97,0,0,311,312,5,107,0,0,312,
	100,1,0,0,0,313,314,5,78,0,0,314,315,5,85,0,0,315,316,5,76,0,0,316,317,
	5,76,0,0,317,102,1,0,0,0,318,319,5,78,0,0,319,320,5,65,0,0,320,104,1,0,
	0,0,321,322,5,73,0,0,322,323,5,110,0,0,323,324,5,102,0,0,324,106,1,0,0,
	0,325,326,5,78,0,0,326,327,5,97,0,0,327,328,5,78,0,0,328,108,1,0,0,0,329,
	330,5,84,0,0,330,331,5,82,0,0,331,332,5,85,0,0,332,333,5,69,0,0,333,110,
	1,0,0,0,334,335,5,70,0,0,335,336,5,65,0,0,336,337,5,76,0,0,337,338,5,83,
	0,0,338,339,5,69,0,0,339,112,1,0,0,0,340,341,5,59,0,0,341,114,1,0,0,0,342,
	343,5,46,0,0,343,344,5,46,0,0,344,345,5,46,0,0,345,116,1,0,0,0,346,347,
	5,46,0,0,347,118,1,0,0,0,348,349,5,48,0,0,349,351,7,0,0,0,350,352,3,123,
	61,0,351,350,1,0,0,0,352,353,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,0,354,
	356,1,0,0,0,355,357,7,1,0,0,356,355,1,0,0,0,356,357,1,0,0,0,357,120,1,0,
	0,0,358,360,3,127,63,0,359,358,1,0,0,0,360,361,1,0,0,0,361,359,1,0,0,0,
	361,362,1,0,0,0,362,364,1,0,0,0,363,365,7,1,0,0,364,363,1,0,0,0,364,365,
	1,0,0,0,365,122,1,0,0,0,366,367,7,2,0,0,367,124,1,0,0,0,368,370,3,127,63,
	0,369,368,1,0,0,0,370,371,1,0,0,0,371,369,1,0,0,0,371,372,1,0,0,0,372,373,
	1,0,0,0,373,377,5,46,0,0,374,376,3,127,63,0,375,374,1,0,0,0,376,379,1,0,
	0,0,377,375,1,0,0,0,377,378,1,0,0,0,378,381,1,0,0,0,379,377,1,0,0,0,380,
	382,3,129,64,0,381,380,1,0,0,0,381,382,1,0,0,0,382,384,1,0,0,0,383,385,
	7,1,0,0,384,383,1,0,0,0,384,385,1,0,0,0,385,410,1,0,0,0,386,388,3,127,63,
	0,387,386,1,0,0,0,388,389,1,0,0,0,389,387,1,0,0,0,389,390,1,0,0,0,390,392,
	1,0,0,0,391,393,3,129,64,0,392,391,1,0,0,0,392,393,1,0,0,0,393,395,1,0,
	0,0,394,396,7,1,0,0,395,394,1,0,0,0,395,396,1,0,0,0,396,410,1,0,0,0,397,
	399,5,46,0,0,398,400,3,127,63,0,399,398,1,0,0,0,400,401,1,0,0,0,401,399,
	1,0,0,0,401,402,1,0,0,0,402,404,1,0,0,0,403,405,3,129,64,0,404,403,1,0,
	0,0,404,405,1,0,0,0,405,407,1,0,0,0,406,408,7,1,0,0,407,406,1,0,0,0,407,
	408,1,0,0,0,408,410,1,0,0,0,409,369,1,0,0,0,409,387,1,0,0,0,409,397,1,0,
	0,0,410,126,1,0,0,0,411,412,2,48,57,0,412,128,1,0,0,0,413,415,7,3,0,0,414,
	416,7,4,0,0,415,414,1,0,0,0,415,416,1,0,0,0,416,417,1,0,0,0,417,418,3,121,
	60,0,418,130,1,0,0,0,419,420,3,121,60,0,420,421,5,105,0,0,421,426,1,0,0,
	0,422,423,3,125,62,0,423,424,5,105,0,0,424,426,1,0,0,0,425,419,1,0,0,0,
	425,422,1,0,0,0,426,132,1,0,0,0,427,432,5,34,0,0,428,431,3,135,67,0,429,
	431,8,5,0,0,430,428,1,0,0,0,430,429,1,0,0,0,431,434,1,0,0,0,432,433,1,0,
	0,0,432,430,1,0,0,0,433,435,1,0,0,0,434,432,1,0,0,0,435,455,5,34,0,0,436,
	441,5,39,0,0,437,440,3,135,67,0,438,440,8,6,0,0,439,437,1,0,0,0,439,438,
	1,0,0,0,440,443,1,0,0,0,441,442,1,0,0,0,441,439,1,0,0,0,442,444,1,0,0,0,
	443,441,1,0,0,0,444,455,5,39,0,0,445,450,5,96,0,0,446,449,3,135,67,0,447,
	449,8,6,0,0,448,446,1,0,0,0,448,447,1,0,0,0,449,452,1,0,0,0,450,451,1,0,
	0,0,450,448,1,0,0,0,451,453,1,0,0,0,452,450,1,0,0,0,453,455,5,96,0,0,454,
	427,1,0,0,0,454,436,1,0,0,0,454,445,1,0,0,0,455,134,1,0,0,0,456,457,5,92,
	0,0,457,462,7,7,0,0,458,462,3,137,68,0,459,462,3,141,70,0,460,462,3,139,
	69,0,461,456,1,0,0,0,461,458,1,0,0,0,461,459,1,0,0,0,461,460,1,0,0,0,462,
	136,1,0,0,0,463,464,5,92,0,0,464,465,5,117,0,0,465,466,3,123,61,0,466,467,
	3,123,61,0,467,468,3,123,61,0,468,469,3,123,61,0,469,480,1,0,0,0,470,471,
	5,92,0,0,471,472,5,117,0,0,472,473,5,123,0,0,473,474,3,123,61,0,474,475,
	3,123,61,0,475,476,3,123,61,0,476,477,3,123,61,0,477,478,5,125,0,0,478,
	480,1,0,0,0,479,463,1,0,0,0,479,470,1,0,0,0,480,138,1,0,0,0,481,482,5,92,
	0,0,482,483,7,8,0,0,483,484,7,9,0,0,484,491,7,9,0,0,485,486,5,92,0,0,486,
	487,7,9,0,0,487,491,7,9,0,0,488,489,5,92,0,0,489,491,7,9,0,0,490,481,1,
	0,0,0,490,485,1,0,0,0,490,488,1,0,0,0,491,140,1,0,0,0,492,493,5,92,0,0,
	493,495,3,123,61,0,494,496,3,123,61,0,495,494,1,0,0,0,495,496,1,0,0,0,496,
	142,1,0,0,0,497,500,5,46,0,0,498,501,3,145,72,0,499,501,7,10,0,0,500,498,
	1,0,0,0,500,499,1,0,0,0,501,507,1,0,0,0,502,506,3,145,72,0,503,506,3,127,
	63,0,504,506,7,10,0,0,505,502,1,0,0,0,505,503,1,0,0,0,505,504,1,0,0,0,506,
	509,1,0,0,0,507,505,1,0,0,0,507,508,1,0,0,0,508,520,1,0,0,0,509,507,1,0,
	0,0,510,516,3,145,72,0,511,515,3,145,72,0,512,515,3,127,63,0,513,515,7,
	10,0,0,514,511,1,0,0,0,514,512,1,0,0,0,514,513,1,0,0,0,515,518,1,0,0,0,
	516,514,1,0,0,0,516,517,1,0,0,0,517,520,1,0,0,0,518,516,1,0,0,0,519,497,
	1,0,0,0,519,510,1,0,0,0,520,144,1,0,0,0,521,522,7,11,0,0,522,146,1,0,0,
	0,523,527,5,37,0,0,524,526,9,0,0,0,525,524,1,0,0,0,526,529,1,0,0,0,527,
	528,1,0,0,0,527,525,1,0,0,0,528,530,1,0,0,0,529,527,1,0,0,0,530,531,5,37,
	0,0,531,148,1,0,0,0,532,536,5,35,0,0,533,535,9,0,0,0,534,533,1,0,0,0,535,
	538,1,0,0,0,536,537,1,0,0,0,536,534,1,0,0,0,537,540,1,0,0,0,538,536,1,0,
	0,0,539,541,5,13,0,0,540,539,1,0,0,0,540,541,1,0,0,0,541,542,1,0,0,0,542,
	543,5,10,0,0,543,544,1,0,0,0,544,545,6,74,0,0,545,150,1,0,0,0,546,548,5,
	13,0,0,547,546,1,0,0,0,547,548,1,0,0,0,548,549,1,0,0,0,549,550,5,10,0,0,
	550,152,1,0,0,0,551,553,7,12,0,0,552,551,1,0,0,0,553,554,1,0,0,0,554,552,
	1,0,0,0,554,555,1,0,0,0,555,556,1,0,0,0,556,557,6,76,0,0,557,154,1,0,0,
	0,40,0,353,356,361,364,371,377,381,384,389,392,395,401,404,407,409,415,
	425,430,432,439,441,448,450,454,461,479,490,495,500,505,507,514,516,519,
	527,536,540,547,554,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!RLexer.__ATN) {
			RLexer.__ATN = new ATNDeserializer().deserialize(RLexer._serializedATN);
		}

		return RLexer.__ATN;
	}


	static DecisionsToDFA = RLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}